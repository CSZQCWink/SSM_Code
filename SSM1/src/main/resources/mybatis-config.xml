<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

<!--
    MyBatis 中的核心配置文件需要按照一定的顺序才能够正常使用
    properties?,settings?,typeAliases?,typeHandlers?,
    objectFactory?,objectWrapperFactory?,reflectorFactory?,
    plugins?,environments?,databaseIdProvider?,mappers?
-->
    <!-- 引入properties文件 此后就可以在当前文件夹中使用${key}的方式访问value -->
    <properties resource="jdbc.properties"/>

    <!--
        设置类型别名 即为某个具体的类型设置一个别名
        在MyBatis的范围内就可以使用这个别名来表示一个具体的类型
    -->
    <typeAliases>
        <!--
            typeAlias：设置某个类型的别名
            属性：
                type：设置需要设置别名的类型
                alias：设置某个类型的别名，若不设置该属性，那么该类型拥有默认的别名，即类名
                       且不区分大小写
        -->
        <!-- <typeAlias type="com.csz.mybatisParameter.pojo.User11" alias="User1" /> -->
        <!-- 以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写 -->
        <package name="com.csz.mybatisParameter.pojo"/>
    </typeAliases>

    <!--
        environments:配置连接数据库的环境
        属性：
          default ；设置默认使用环境的id
    -->
    <environments default="development">
        <!--
            environment:配置某一个具体的环境
            属性：
                id：表示连接数据库的环境的唯一标识，不能重复
        -->
        <environment id="development">
        <!--
            transactionManager：设置事务管理器
            属性：
                type:设置事务管理的方式
                type="JDBC/MANAGED"
                    JDBC：表示使用JDBC原生的事务管理模式
                    MANAGED:被管理 例如Spring
         -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource:设置数据源
                属性：
                    type：设置数据源的类型
                    type："POOLED/UNPOOLED/JNDI"
                        POOLED：表示使用数据库连接池
                        UNPOOLED：表示不使用数据库连接池
                        JNDI：表示使用上下文中的数据源
      -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--引入映射文件-->
    <mappers>
        <!-- <mapper resource="mappers/UserMapper.xml"/> -->
        <!--
            以包的形式引入映射文件 但需要满足两个基本条件
                (1) Mapper接口的包需要和映射文件所在的包一致
                (2) Mapper接口的名字必须和映射文件的名字一致
        -->
        <package name="com.csz.mybatis.mapper"/>
    </mappers>
</configuration>